const express = require("express");
const bodyParser = require("body-parser");
const webpush = require("web-push");
const sectors = require("./data/sectors.json");
const certificates = require("./data/certificates.json");

let baseAmount = 2_000_000;
let interval = 20000;
const app = express();

app.use(express.static("public"));
app.use(bodyParser.json());

const PORT = process.env.PORT || 80;

const subscriptions = [];

// VAPID keys generated by webpush.generateVAPIDKeys();
const vapidKeys = {
  publicKey:
    "BMFpN5ygbDHD48ZqHhMiK3HzbyNYNlMK8utm5_it3qcWGBsEi22n674SR5MDB_Fs5LH08R1sHJRxPUSDlbwnagU",
  privateKey: "9KKUFj7Um93wC2TZsJi8dpRfDmxIM8YHgqZgAlQgg0g",
};

webpush.setVapidDetails(
  "mailto:example@example.com",
  vapidKeys.publicKey,
  vapidKeys.privateKey
);

const sendNotification = async (subscriptions, notificationPayload = {}) => {
  try {
    await Promise.all(
      subscriptions.map((sub) =>
        webpush.sendNotification(sub, JSON.stringify(notificationPayload))
      )
    );
    console.log("Notification sent successfully.");
    return {
      successfulSending: true,
    };
  } catch (err) {
    console.error("Error sending notification, reason: ", err);
    return {
      successfulSending: false,
      error: err,
    };
  }
};

app.post("/subscribe", (req, res) => {
  const subscription = req.body;
  subscriptions.push(subscription);
  res.status(201).json({ message: "Subscription added successfully." });
});

app.post("/trigger-push", async (req, res) => {
  const notificationPayload = req.body;
  const sendingStatus = await sendNotification(
    subscriptions,
    notificationPayload
  );
  if (sendingStatus.successfulSending) {
    res.status(200).json({ message: "Notification sent successfully." });
  } else {
    res.status(500).json({
      message: "Error sending notification.",
      reason: sendingStatus.error,
    });
  }
});

// get base amount for the calculator
app.get("/base-amount", (req, res) => {
  res.send(JSON.stringify({ baseAmount }));
});

// get sectors
app.get("/sectors", (req, res) => {
    res.send(JSON.stringify({ sectors }));
});

// get sectors
app.get("/certificates", (req, res) => {
    res.send(JSON.stringify({ certificates }));
});


//change interval
app.post("/interval", (req, res) => {
  console.log(req.body);
  if (req.body.interval) {
    interval = req.body.interval;
    res.status(200).json({ message: `Interval set to ${interval} ms.` });
  } else {
    res.status(400).json({ message: "Interval is missing." });
  }
});

app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});

// For testing push notifications increment the base amount by 50_000 and send a notification every 20 seconds
const updateBaseAmount = async () => {
  baseAmount += 50000;
  const notificationPayload = {
    title: `Base Amount Updated`,
    body: `New base amount is ${baseAmount} HUF`,
    icon: "icons/icon-512x512.png",
    data: {
      baseAmount: baseAmount,
    },
  };
  await sendNotification(subscriptions, notificationPayload);
};

setInterval(updateBaseAmount, interval);
